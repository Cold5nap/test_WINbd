tags:
  name: Article
  description: Crud для новостей

components:
  schemas:
    Article:
      type: object
      properties:
        title:
          type: string
          description: Заголовок статьи
          example: Заголовок
        content:
          type: array
          description: блоки статьи
          items:
            type: object
            properties:
              type:
                type: string
                default: text
              data:
                type: string

        publishAt:
          description: Время публикации. Отправлять с часовым поясом как в примере.
          type: string
          format: date-time
          example: "2025-04-22T15:10:00.000+03:00"
        isPublished:
          description: Опубликовано или не опубликовано
          type: boolean
          example: true
    Response:
      type: object
      properties:
        message:
          type: string
        article:
          $ref: '#/components/schemas/Article'

# endpoints
/api/article:
  get:
    parameters:
      - $ref: '#/components/parameters/AuthorizationHeader'
    tags: [Article]
    summary: Список новостей
    responses:
      401:
        $ref: '#/components/responses/Unauthorize'
      200:
        description: Список новостей
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
  post:
    parameters:
      - $ref: '#/components/parameters/AuthorizationHeader'
    tags: [Article]
    summary: Добавление новости
    description: Добавлять новости можно сразу или отложенно. При передаче {isPublished:false, publishAt:2025-04-22T15:10:00.000+03:00}
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Article'
    responses:
      401:
        $ref: '#/components/responses/Unauthorize'
      200:
        description: добавленная новость
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/Response'
/api/article/{id}:
  get:
    tags: [Article]
    parameters:
      - in: path
        name: id
      - $ref: '#/components/parameters/AuthorizationHeader'
    summary: новости по id
    responses:
      401:
        $ref: '#/components/responses/Unauthorize'
      200:
        description: новость
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/Article'
  put:
    tags: [Article]
    parameters:
      - in: path
        name: id
      - $ref: '#/components/parameters/AuthorizationHeader'
    summary: Обновление новости
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Article'
    responses:
      401:
        $ref: '#/components/responses/Unauthorize'
      200:
        description: Успешное добавление новостей
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
  delete:
    tags: [Article]
    parameters:
      - in: path
        name: id
      - $ref: '#/components/parameters/AuthorizationHeader'
    summary: Удаление новости по id
    responses:
      401:
        $ref: '#/components/responses/Unauthorize'
      200:
        description: Успешное удаление
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
